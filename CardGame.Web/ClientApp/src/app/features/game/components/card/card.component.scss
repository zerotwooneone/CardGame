:host {
  display: block; // Ensure the component takes up space
}

.card-container {
  // --- Base Card Styling ---
  width: 80px; // Example size
  height: 120px; // Example size
  border: 1px solid var(--mat-divider-color, rgba(0,0,0,0.12)); // Use divider color for border
  border-radius: 6px;
  cursor: default;
  position: relative;
  overflow: hidden;
  // Use theme background variable (e.g., for paper/card background)
  background-color: var(--mat-card-background-color, white);
  // Use theme text variable for default text
  color: var(--mat-card-text-color, var(--mat-app-text-color, black));
  box-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12); // Standard Material elevation 1
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out, border-color 0.2s ease-in-out;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

  // --- State Styles ---
  &.playable {
    cursor: pointer;
    // Use theme accent color for playable border (adjust hue if needed)
    border-color: var(--mat-accent-color-500, #4CAF50); // Fallback green

    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2), 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 2px rgba(0,0,0,.12); // Material elevation 8
    }
  }

  &.selected {
    // Use theme primary color for selected border
    border-color: var(--mat-primary-color-500, #3f51b5); // Fallback indigo
    border-width: 2px;
    transform: scale(1.05); // Slightly larger when selected
    // Use primary color with transparency for glow
    box-shadow: 0 0 10px 2px var(--mat-primary-color-300, rgba(63, 81, 181, 0.5));
  }

  &.face-down {
    // Use a distinct color for the back, could be primary or accent, or a neutral grey
    background-color: var(--mat-primary-color-700, #303f9f); // Darker primary shade example
    border-color: var(--mat-primary-color-800, #283593);
    color: var(--mat-primary-contrast-color-700, white); // Ensure contrast for text/icons on back
  }

  // Note: Dark mode is handled automatically by the CSS variables changing
  // based on the globally applied theme (e.g., body.dark-theme)
}

.card-face {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  backface-visibility: hidden; // For potential flip animation
  padding: 5px;
  box-sizing: border-box;
}

.card-back {
  // Styles for the card back design
  .card-back-design {
    font-size: 2em;
    font-weight: bold;
    // Color is inherited from .face-down rule now
  }
}

.card-front {
  // Styles for the card front content
  justify-content: space-between; // Push rank to corners
  align-items: stretch;
  // Color inherited from .card-container

  .card-rank {
    font-size: 1.2em;
    font-weight: bold;
  }

  .top-left {
    align-self: flex-start;
  }

  .bottom-right {
    align-self: flex-end;
  }

  .card-name {
    font-size: 0.9em;
    text-align: center;
    font-weight: 600;
    white-space: normal;
    word-wrap: break-word;
    // Allow name to take up necessary space
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .card-id { // Optional debug display
    position: absolute;
    bottom: 2px;
    left: 2px;
    font-size: 0.5em;
    color: var(--mat-secondary-text-color, rgba(0,0,0,0.54)); // Use hint/secondary text color
  }

}

.card-placeholder {
  font-size: 3em;
  color: var(--mat-disabled-text-color, rgba(0,0,0,0.38)); // Use disabled text color
}
