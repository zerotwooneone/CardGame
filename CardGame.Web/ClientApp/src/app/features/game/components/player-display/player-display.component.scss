@use '../_player-shared.scss' as shared; // Import shared styles with alias

:host {
  display: block;
  transition: transform 0.2s ease-out, box-shadow 0.2s ease-out, border-color 0.2s ease-out;
  border-radius: 4px; // Match card border radius
  border: 2px solid transparent; // Placeholder for target highlight
  margin: 5px; // Spacing between players
}

.player-card {
  min-height: 180px; // Ensure minimum size
  display: flex;
  flex-direction: column;
  transition: background-color 0.3s ease;
  // Use theme variables for background/color (handled by mat-card)
}

.current-user-indicator {
  font-size: 1em; // Match text size
  height: 1em;
  width: 1em;
  vertical-align: middle;
  // Use theme's secondary text color or a subtle accent
  color: var(--mat-secondary-text-color, rgba(0,0,0,0.54));
}

.player-area {
  display: flex;
  flex-direction: column; // Stack hand and discard
  gap: 10px; // Space between hand and discard areas
  flex-grow: 1; // Allow content to fill card height
  padding-top: 8px;
}

.card-slot {
  // Container for each card, can add specific layout if needed
}

// --- State Styling using HostBinding classes ---

:host(.current-turn) {
  @include shared.shared-current-turn-glow; // Apply shared mixin using alias
  // Original transform: scale(1.02); is in the mixin (commented out by default)
}

:host(.eliminated) {
  @include shared.shared-eliminated-state; // Apply shared mixin using alias
}

:host(.targetable) {
  cursor: pointer;
  &:hover {
    // Use theme's primary color (lighter shade) for hover effect
    box-shadow: 0 0 10px 1px var(--mat-primary-color-200, rgba(63, 81, 181, 0.3));
  }
}

:host(.selected-target) {
  // Use theme's primary color for border
  border: 2px solid var(--mat-primary-color-500, #3f51b5);
  box-shadow: 0 0 10px 1px var(--mat-primary-color-300, rgba(63, 81, 181, 0.5));
}

:host(.current-user) {
  // Optional: Add a subtle border or background to distinguish the current user's card
  // border-left: 4px solid var(--mat-accent-color-500);
}
