// *** IMPORTANT: Ensure this @use statement is at the top of the file ***
// It imports the necessary Angular Material functions and variables (like palettes).
@use '@angular/material' as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// --- Define Palettes (Using M2 compatibility function for v18+) ---
$cardgame-primary: mat.m2-define-palette(mat.$m2-indigo-palette, 500, 100, 700);
$cardgame-accent: mat.m2-define-palette(mat.$m2-pink-palette, A200, A100, A400);
$cardgame-warn: mat.m2-define-palette(mat.$m2-red-palette);

// --- Define Light Theme (Using M2 compatibility functions) ---
$cardgame-light-theme: mat.m2-define-light-theme((
  color: (
    primary: $cardgame-primary,
    accent: $cardgame-accent,
    warn: $cardgame-warn,
  ),
  // typography: mat.define-typography-config(),
  // density: 0,
));

// --- Define Dark Theme (Using M2 compatibility functions) ---
$cardgame-dark-primary: mat.m2-define-palette(mat.$m2-blue-grey-palette, 700, 300, 900);
$cardgame-dark-accent: mat.m2-define-palette(mat.$m2-amber-palette, A200, A100, A400);
$cardgame-dark-warn: mat.m2-define-palette(mat.$m2-deep-orange-palette);

$cardgame-dark-theme: mat.m2-define-dark-theme((
  color: (
    primary: $cardgame-dark-primary,
    accent: $cardgame-dark-accent,
    warn: $cardgame-dark-warn,
  )
));

// --- Apply Themes ---

// Apply the light theme always (serves as the default)
// We apply themes directly to the :root or body, or specific component selectors.
// Applying all component themes includes structural styles that might conflict
// if applied twice (once for light, once for dark in the media query).
// It's often better to apply only the *colors* for the dark theme override.
// Alternatively, define common structural themes separately.
@include mat.all-component-themes($cardgame-light-theme);

// Apply the dark theme colors when the user prefers dark mode
@media (prefers-color-scheme: dark) {
  // Apply only the color styles for the dark theme.
  // This overrides the light theme colors applied above.
  @include mat.all-component-colors($cardgame-dark-theme);

  // Optional: Add specific global overrides for dark theme if needed
  // for non-Material components or base elements.
  // body {
  //   background-color: mat.get-theme-color(mat.get-theme-background-palette($cardgame-dark-theme), background);
  //   color: mat.get-theme-color(mat.get-theme-foreground-palette($cardgame-dark-theme), base);
  // }
}


// --- Global Styles ---
// Include any other global styles below the theme definitions.

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif; // Default Material font

  // Set background and text color based on the applied theme's CSS variables
  // This ensures the body background adapts correctly. Material themes emit CSS variables.
  // Use the standard Material CSS variables for background and text.
  background-color: var(--mat-app-background-color);
  color: var(--mat-app-text-color);
}

// Example: Style scrollbars globally (optional)
::-webkit-scrollbar {
  width: 8px;
}
::-webkit-scrollbar-track {
  // Use a background color that adapts? Or keep it simple.
  background: rgba(128, 128, 128, 0.1); // Slightly visible track
}
::-webkit-scrollbar-thumb {
  background: rgba(128, 128, 128, 0.5); // Semi-transparent grey
  border-radius: 4px;
}
::-webkit-scrollbar-thumb:hover {
  background: rgba(128, 128, 128, 0.7);
}

// Add global helper classes if needed
.full-width {
  width: 100%;
}

